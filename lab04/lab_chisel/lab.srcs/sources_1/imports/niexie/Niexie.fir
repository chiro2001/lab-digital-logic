;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Niexie : 
  module NiexieDisplay : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {values : UInt<8>[8], started : UInt<1>}, out : {ledCx : UInt<8>, ledEn : UInt<8>}}
    
    reg cnt : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[Niexie.scala 19:20]
    reg tim : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Niexie.scala 20:20]
    node flash = eq(tim, UInt<3>("h04")) @[Niexie.scala 42:19]
    node _cnt_T = eq(cnt, UInt<3>("h07")) @[Niexie.scala 44:29]
    node _cnt_T_1 = add(cnt, UInt<1>("h01")) @[Niexie.scala 44:47]
    node _cnt_T_2 = tail(_cnt_T_1, 1) @[Niexie.scala 44:47]
    node _cnt_T_3 = mux(_cnt_T, UInt<1>("h00"), _cnt_T_2) @[Niexie.scala 44:24]
    node _cnt_T_4 = mux(flash, _cnt_T_3, cnt) @[Niexie.scala 44:13]
    cnt <= _cnt_T_4 @[Niexie.scala 44:7]
    node _tim_T = add(tim, UInt<1>("h01")) @[Niexie.scala 45:49]
    node _tim_T_1 = tail(_tim_T, 1) @[Niexie.scala 45:49]
    node _tim_T_2 = mux(flash, UInt<1>("h00"), _tim_T_1) @[Niexie.scala 45:32]
    node _tim_T_3 = mux(io.in.started, _tim_T_2, tim) @[Niexie.scala 45:13]
    tim <= _tim_T_3 @[Niexie.scala 45:7]
    node _io_out_ledEn_T = dshl(UInt<8>("h01"), cnt) @[Niexie.scala 46:48]
    node _io_out_ledEn_T_1 = mux(io.in.started, _io_out_ledEn_T, UInt<8>("h00")) @[Niexie.scala 46:23]
    node _io_out_ledEn_T_2 = not(_io_out_ledEn_T_1) @[Niexie.scala 46:19]
    io.out.ledEn <= _io_out_ledEn_T_2 @[Niexie.scala 46:16]
    node _io_out_ledCx_T = bits(cnt, 2, 0)
    node _io_out_ledCx_T_1 = not(UInt<8>("h0c0")) @[Niexie.scala 47:68]
    node _io_out_ledCx_T_2 = eq(UInt<1>("h00"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_3 = mux(_io_out_ledCx_T_2, UInt<8>("h03f"), _io_out_ledCx_T_1) @[Mux.scala 80:57]
    node _io_out_ledCx_T_4 = eq(UInt<1>("h01"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_5 = mux(_io_out_ledCx_T_4, UInt<8>("h06"), _io_out_ledCx_T_3) @[Mux.scala 80:57]
    node _io_out_ledCx_T_6 = eq(UInt<2>("h02"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_7 = mux(_io_out_ledCx_T_6, UInt<8>("h05b"), _io_out_ledCx_T_5) @[Mux.scala 80:57]
    node _io_out_ledCx_T_8 = eq(UInt<2>("h03"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_9 = mux(_io_out_ledCx_T_8, UInt<8>("h04f"), _io_out_ledCx_T_7) @[Mux.scala 80:57]
    node _io_out_ledCx_T_10 = eq(UInt<3>("h04"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_11 = mux(_io_out_ledCx_T_10, UInt<8>("h066"), _io_out_ledCx_T_9) @[Mux.scala 80:57]
    node _io_out_ledCx_T_12 = eq(UInt<3>("h05"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_13 = mux(_io_out_ledCx_T_12, UInt<8>("h06d"), _io_out_ledCx_T_11) @[Mux.scala 80:57]
    node _io_out_ledCx_T_14 = eq(UInt<3>("h06"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_15 = mux(_io_out_ledCx_T_14, UInt<8>("h07d"), _io_out_ledCx_T_13) @[Mux.scala 80:57]
    node _io_out_ledCx_T_16 = eq(UInt<3>("h07"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_17 = mux(_io_out_ledCx_T_16, UInt<8>("h07"), _io_out_ledCx_T_15) @[Mux.scala 80:57]
    node _io_out_ledCx_T_18 = eq(UInt<4>("h08"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_19 = mux(_io_out_ledCx_T_18, UInt<8>("h07f"), _io_out_ledCx_T_17) @[Mux.scala 80:57]
    node _io_out_ledCx_T_20 = eq(UInt<4>("h09"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_21 = mux(_io_out_ledCx_T_20, UInt<8>("h067"), _io_out_ledCx_T_19) @[Mux.scala 80:57]
    node _io_out_ledCx_T_22 = eq(UInt<4>("h0a"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_23 = mux(_io_out_ledCx_T_22, UInt<8>("h077"), _io_out_ledCx_T_21) @[Mux.scala 80:57]
    node _io_out_ledCx_T_24 = eq(UInt<4>("h0b"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_25 = mux(_io_out_ledCx_T_24, UInt<8>("h07c"), _io_out_ledCx_T_23) @[Mux.scala 80:57]
    node _io_out_ledCx_T_26 = eq(UInt<4>("h0c"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_27 = mux(_io_out_ledCx_T_26, UInt<8>("h058"), _io_out_ledCx_T_25) @[Mux.scala 80:57]
    node _io_out_ledCx_T_28 = eq(UInt<4>("h0d"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_29 = mux(_io_out_ledCx_T_28, UInt<8>("h05e"), _io_out_ledCx_T_27) @[Mux.scala 80:57]
    node _io_out_ledCx_T_30 = eq(UInt<4>("h0e"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_31 = mux(_io_out_ledCx_T_30, UInt<8>("h079"), _io_out_ledCx_T_29) @[Mux.scala 80:57]
    node _io_out_ledCx_T_32 = eq(UInt<4>("h0f"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_33 = mux(_io_out_ledCx_T_32, UInt<8>("h071"), _io_out_ledCx_T_31) @[Mux.scala 80:57]
    node _io_out_ledCx_T_34 = eq(UInt<4>("h0a"), io.in.values[_io_out_ledCx_T]) @[Mux.scala 80:60]
    node _io_out_ledCx_T_35 = mux(_io_out_ledCx_T_34, UInt<8>("h03f"), _io_out_ledCx_T_33) @[Mux.scala 80:57]
    node _io_out_ledCx_T_36 = mux(io.in.started, _io_out_ledCx_T_35, UInt<8>("h00")) @[Niexie.scala 47:23]
    node _io_out_ledCx_T_37 = not(_io_out_ledCx_T_36) @[Niexie.scala 47:19]
    io.out.ledCx <= _io_out_ledCx_T_37 @[Niexie.scala 47:16]
    
  module Niexie : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {button : UInt<1>}, out : {ledCx : UInt<8>, ledEn : UInt<8>}}
    
    reg starting : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Niexie.scala 64:25]
    reg started : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Niexie.scala 65:24]
    node _dismiss_T = not(started) @[Niexie.scala 66:33]
    node dismiss = or(io.in.button, _dismiss_T) @[Niexie.scala 66:30]
    node valuesRaw_lo = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_hi = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_lo_1 = cat(valuesRaw_hi, valuesRaw_lo) @[Cat.scala 30:58]
    node valuesRaw_0 = cat(UInt<4>("h00"), valuesRaw_lo_1) @[Cat.scala 30:58]
    node valuesRaw_lo_2 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_hi_1 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_lo_3 = cat(valuesRaw_hi_1, valuesRaw_lo_2) @[Cat.scala 30:58]
    node valuesRaw_1 = cat(UInt<4>("h00"), valuesRaw_lo_3) @[Cat.scala 30:58]
    node valuesRaw_lo_4 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_hi_2 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_lo_5 = cat(valuesRaw_hi_2, valuesRaw_lo_4) @[Cat.scala 30:58]
    node valuesRaw_2 = cat(UInt<4>("h00"), valuesRaw_lo_5) @[Cat.scala 30:58]
    node valuesRaw_lo_6 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_hi_3 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_lo_7 = cat(valuesRaw_hi_3, valuesRaw_lo_6) @[Cat.scala 30:58]
    node valuesRaw_3 = cat(UInt<4>("h00"), valuesRaw_lo_7) @[Cat.scala 30:58]
    node valuesRaw_lo_8 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_hi_4 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_lo_9 = cat(valuesRaw_hi_4, valuesRaw_lo_8) @[Cat.scala 30:58]
    node valuesRaw_4 = cat(UInt<4>("h00"), valuesRaw_lo_9) @[Cat.scala 30:58]
    node valuesRaw_lo_10 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_hi_5 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node valuesRaw_lo_11 = cat(valuesRaw_hi_5, valuesRaw_lo_10) @[Cat.scala 30:58]
    node valuesRaw_5 = cat(UInt<4>("h00"), valuesRaw_lo_11) @[Cat.scala 30:58]
    node valuesRaw_lo_12 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node valuesRaw_hi_6 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node valuesRaw_lo_13 = cat(valuesRaw_hi_6, valuesRaw_lo_12) @[Cat.scala 30:58]
    node valuesRaw_6 = cat(UInt<4>("h00"), valuesRaw_lo_13) @[Cat.scala 30:58]
    node valuesRaw_lo_14 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node valuesRaw_hi_7 = cat(UInt<1>("h01"), UInt<1>("h00")) @[Cat.scala 30:58]
    node valuesRaw_lo_15 = cat(valuesRaw_hi_7, valuesRaw_lo_14) @[Cat.scala 30:58]
    node valuesRaw_7 = cat(UInt<4>("h00"), valuesRaw_lo_15) @[Cat.scala 30:58]
    wire values : UInt<8>[8] @[Niexie.scala 72:23]
    values[0] <= valuesRaw_0 @[Niexie.scala 72:23]
    values[1] <= valuesRaw_1 @[Niexie.scala 72:23]
    values[2] <= valuesRaw_2 @[Niexie.scala 72:23]
    values[3] <= valuesRaw_3 @[Niexie.scala 72:23]
    values[4] <= valuesRaw_4 @[Niexie.scala 72:23]
    values[5] <= valuesRaw_5 @[Niexie.scala 72:23]
    values[6] <= valuesRaw_6 @[Niexie.scala 72:23]
    values[7] <= valuesRaw_7 @[Niexie.scala 72:23]
    reg tim : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[Niexie.scala 84:20]
    node update = eq(tim, UInt<6>("h027")) @[Niexie.scala 85:20]
    reg valueLast : UInt<8>[8], clock @[Niexie.scala 86:22]
    when dismiss : @[Niexie.scala 87:18]
      values[0] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[1] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[2] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[3] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[4] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[5] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[6] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      values[7] <= UInt<8>("h0a") @[Niexie.scala 88:12]
      skip @[Niexie.scala 87:18]
    else : @[Niexie.scala 89:16]
      wire _WIRE : UInt<8>[8] @[Niexie.scala 93:30]
      _WIRE[0] <= values[7] @[Niexie.scala 93:30]
      _WIRE[1] <= values[0] @[Niexie.scala 93:30]
      _WIRE[2] <= values[1] @[Niexie.scala 93:30]
      _WIRE[3] <= values[2] @[Niexie.scala 93:30]
      _WIRE[4] <= values[3] @[Niexie.scala 93:30]
      _WIRE[5] <= values[4] @[Niexie.scala 93:30]
      _WIRE[6] <= values[5] @[Niexie.scala 93:30]
      _WIRE[7] <= values[6] @[Niexie.scala 93:30]
      reg REG : UInt<8>[8], clock with : (reset => (reset, _WIRE)) @[Niexie.scala 93:22]
      values[0] <= REG[0] @[Niexie.scala 93:12]
      values[1] <= REG[1] @[Niexie.scala 93:12]
      values[2] <= REG[2] @[Niexie.scala 93:12]
      values[3] <= REG[3] @[Niexie.scala 93:12]
      values[4] <= REG[4] @[Niexie.scala 93:12]
      values[5] <= REG[5] @[Niexie.scala 93:12]
      values[6] <= REG[6] @[Niexie.scala 93:12]
      values[7] <= REG[7] @[Niexie.scala 93:12]
      skip @[Niexie.scala 89:16]
    when io.in.button : @[Niexie.scala 96:23]
      node _T = not(starting) @[Niexie.scala 97:11]
      when _T : @[Niexie.scala 97:22]
        starting <= UInt<1>("h01") @[Niexie.scala 98:16]
        skip @[Niexie.scala 97:22]
      else : @[Niexie.scala 99:18]
        started <= UInt<1>("h00") @[Niexie.scala 100:15]
        skip @[Niexie.scala 99:18]
      skip @[Niexie.scala 96:23]
    valueLast[0] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[1] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[2] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[3] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[4] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[5] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[6] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    valueLast[7] <= UInt<8>("h0a") @[Niexie.scala 104:13]
    when starting : @[Niexie.scala 107:19]
      started <= UInt<1>("h01") @[Niexie.scala 108:13]
      node _T_1 = not(started) @[Niexie.scala 109:11]
      when _T_1 : @[Niexie.scala 109:21]
        tim <= UInt<1>("h00") @[Niexie.scala 110:11]
        skip @[Niexie.scala 109:21]
      else : @[Niexie.scala 112:18]
        node _tim_T = mux(update, UInt<1>("h00"), tim) @[Niexie.scala 113:17]
        tim <= _tim_T @[Niexie.scala 113:11]
        skip @[Niexie.scala 112:18]
      skip @[Niexie.scala 107:19]
    inst niexieDisplay of NiexieDisplay @[Niexie.scala 118:29]
    niexieDisplay.clock <= clock
    niexieDisplay.reset <= reset
    niexieDisplay.io.in.values[0] <= values[0] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[1] <= values[1] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[2] <= values[2] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[3] <= values[3] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[4] <= values[4] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[5] <= values[5] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[6] <= values[6] @[Niexie.scala 120:30]
    niexieDisplay.io.in.values[7] <= values[7] @[Niexie.scala 120:30]
    niexieDisplay.io.in.started <= started @[Niexie.scala 121:31]
    io.out.ledEn <= niexieDisplay.io.out.ledEn @[Niexie.scala 122:10]
    io.out.ledCx <= niexieDisplay.io.out.ledCx @[Niexie.scala 122:10]
    
